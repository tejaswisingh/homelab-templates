---
networks:
  auth_network:
    external: true

services:
  postgresql:
    image: postgres:14
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    networks:
      - auth_network
    volumes:
      - postgresql_data:/var/lib/postgresql/data

  redis:
    image: redis:6
    restart: unless-stopped
    networks:
      - auth_network
    volumes:
      - redis_data:/data

  authentik:
    image: ghcr.io/goauthentik/server:latest
    restart: unless-stopped
    depends_on:
      - postgresql
      - redis
    environment:
      AUTHENTIK_REDIS__HOST: ${AUTHENTIK_REDIS_HOST}
      AUTHENTIK_POSTGRESQL__HOST: ${AUTHENTIK_POSTGRESQL_HOST}
      AUTHENTIK_POSTGRESQL__USER: ${AUTHENTIK_POSTGRESQL_USER}
      AUTHENTIK_POSTGRESQL__PASSWORD: ${AUTHENTIK_POSTGRESQL_PASSWORD}
      AUTHENTIK_POSTGRESQL__NAME: ${AUTHENTIK_POSTGRESQL_NAME}
      AUTHENTIK_SECRET_KEY: ${AUTHENTIK_SECRET_KEY}
    volumes:
      - authentik_data:/app/data
    networks:
      - auth_network
    ports:
      - "9000:9000"

  worker:
    image: ghcr.io/goauthentik/server:latest
    restart: unless-stopped
    depends_on:
      - authentik
    environment:
      CELERY__BROKER_URL: redis://redis:6379
      AUTHENTIK_POSTGRESQL__HOST: ${AUTHENTIK_POSTGRESQL_HOST}
      AUTHENTIK_POSTGRESQL__USER: ${AUTHENTIK_POSTGRESQL_USER}
      AUTHENTIK_POSTGRESQL__PASSWORD: ${AUTHENTIK_POSTGRESQL_PASSWORD}
      AUTHENTIK_POSTGRESQL__NAME: ${AUTHENTIK_POSTGRESQL_NAME}
      AUTHENTIK_SECRET_KEY: ${AUTHENTIK_SECRET_KEY}
    networks:
      - auth_network

volumes:
  postgresql_data:
  redis_data: 
  authentik_data:
